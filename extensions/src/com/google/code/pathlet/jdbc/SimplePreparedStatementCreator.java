package com.google.code.pathlet.jdbc;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import org.springframework.jdbc.core.PreparedStatementCreator;
import org.springframework.jdbc.core.SqlProvider;
import org.springframework.util.Assert;

public class SimplePreparedStatementCreator implements PreparedStatementCreator, SqlProvider {

	private final String sql;
	
	private int autoGeneratedKeys = 0;
	
	private int resultSetType = 0;
	
	private int resultSetConcurrency = 0;
	
	private String[] keyColumns;
	
	/**
	 * =1, method Connection.prepareStatement(String sql, int autoGeneratedKeys) will be called
	 * =2, method Connection.prepareStatement(String sql, int resultSetType, int resultSetConcurrency) will be called 
	 */
	private int prepareStatementMethodIndex = 0; 

	
	public SimplePreparedStatementCreator(String sql, int autoGeneratedKeys) {
		Assert.notNull(sql, "SQL must not be null");
		this.sql = sql;
		this.autoGeneratedKeys = autoGeneratedKeys;
		this.prepareStatementMethodIndex = 1;	
	}

	
	public SimplePreparedStatementCreator(String sql, int resultSetType, int resultSetConcurrency) {
		Assert.notNull(sql, "SQL must not be null");
		this.sql = sql;
		this.resultSetType = resultSetType;
		this.resultSetConcurrency = resultSetConcurrency;
		this.prepareStatementMethodIndex = 2;
	}
	
	
	public SimplePreparedStatementCreator(String sql, String[] keyColumns) {
		Assert.notNull(sql, "SQL must not be null");
		this.sql = sql;
		this.keyColumns = keyColumns;
		this.prepareStatementMethodIndex = 3;	
	}

	public PreparedStatement createPreparedStatement(Connection con) throws SQLException {
		PreparedStatement ps = null;
		if(prepareStatementMethodIndex == 1) {
			ps = con.prepareStatement(this.sql, autoGeneratedKeys);
		}
		else if(prepareStatementMethodIndex == 2) {
			ps = con.prepareStatement(this.sql, resultSetType, resultSetConcurrency);
		}
		else if(prepareStatementMethodIndex == 3) {
			ps = con.prepareStatement(this.sql, keyColumns);
		}
		return ps;
	}

	public String getSql() {
		return this.sql;
	}
}

